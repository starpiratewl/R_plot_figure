## This plot will overview the distribution of differentiated methylation points

setwd("D:\\importantbk\\working\\lab_working\\QIAN\\zhou\\work")

d <- read.csv("com_difbeta1.txt", header=T, sep="\t", stringsAsFactor = F)

tab <- d[,c(1,2,4)]

plot(tab[,2], tab[,3],pch=19, xlim=c(0,1),cex=0.7,cex.axis=1,font.axis=1,
     xlab="KYSE.410.24Gy", ylab="KYSE.410", xaxt="n")


library(ggplot2)

qplot(KYSE.410.24Gy.AVG_Beta, KYSE.410.AVG_Beta, data = tab, alpha = I(1/20))

KYSE_410_gy <- -log(tab[,2],100)

KYSE_410 <- -log(tab[,3],100)


qplot(KYSE_410_gy, KYSE_410,  alpha = I(1/50))












setwd("D:\\importantbk\\working\\lab_working\\QIAN\\zhou\\work")


tab <- read.csv(file = "data_com1.txt", sep = "\t", stringsAsFactor = F)


d <- read.csv(file = "com_difbeta1.txt", sep = "\t", stringsAsFactor = F)


tab1 <- tab[,c(1,2,4)]

#plot(tab1[,2], tab1[,3],pch=19, xlim=c(0,1),cex=0.7,cex.axis=1,font.axis=1,xlab="KYSE.410.24Gy", ylab="KYSE.410", xaxt="n")

## This plot is not good, points are too dense.
plot(tab1[,2], tab1[,3],pch=19, xlim=c(0,1),cex=0.7,cex.axis=1,font.axis=1,xlab="KYSE.TE1.16Gy", ylab="KYSE.TE1")


## The ggplot2 approach is much better because we can set the points to semi transparent.
library(ggplot2)

png("beta_distribution_TE1.png")
qplot(TE.1.AVG_Beta, TE.1.16.Gy.AVG_Beta, data = tab1, alpha = I(1/20))
dev.off()

sp <- ggplot(tab1, aes(x = TE.1.AVG_Beta, y = TE.1.16.Gy.AVG_Beta)) + geom_point(alpha = I(1/20))

sp + geom_abline(intercept = 0.2, slope = 1, color = "red", size = 1) + geom_abline(intercept = -0.2, slope = 1, color = "blue", size = 1) + theme_bw() + theme(panel.border = element_blank(), axis.line = element_line(color = "black", size = 3, lineend = "square"))

sp + theme(axis.title.x = element_blank(), axis.title.y = element_blank())

sp + geom_abline(intercept = 0.2, slope = 1, color = "red", size = 1) + geom_abline(intercept = -0.2, slope = 1, color = "blue", size = 1) + theme_bw() + theme(panel.border = element_blank(), axis.line.x = element_line(color = "black", size = 3, lineend = "square"))

sp + geom_abline(intercept = 0.2, slope = 1, color = "red", size = 1) + geom_abline(intercept = -0.2, slope = 1, color = "blue", size = 1) + theme_bw() + theme(panel.border = element_blank(), axis.line.x = element_line(color = "black", size = 1, lineend = "square"),axis.line.y = element_line(color = "black", size = 1, lineend = "square"),axis.title.x = element_blank(), axis.title.y = element_blank())

sp + geom_abline(intercept = 0.2, slope = 1, color = "red", size = 1) + geom_abline(intercept = -0.2, slope = 1, color = "blue", size = 1) + theme_bw() + theme(panel.border = element_blank(), axis.line.x = element_line(color = "black", size = 1, lineend = "square"),axis.line.y = element_line(color = "black", size = 1, lineend = "square"),axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x =element_text(size=15), axis.text.y=element_text(size=15))


pdf("test.pdf")
sp + geom_abline(intercept = 0.2, slope = 1, color = "red", size = 1) + geom_abline(intercept = -0.2, slope = 1, color = "blue", size = 1) + theme_bw() + theme(panel.border = element_blank(), axis.line.x = element_line(color = "black", size = 1, lineend = "square"),axis.line.y = element_line(color = "black", size = 1, lineend = "square"),axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x =element_text(size=15), axis.text.y=element_text(size=15))
dev.off()









require(Cairo)
CairoPDF("distribution of TE1_16Gy.pdf", 7, 7) #单位为英寸
hist(tab1$TE.1.16.Gy.AVG_Beta, main = "", xlab = "", ylab = "")
abline(v = 0.2, col = "blue", lwd = 5)
text(0.3, 95010, "31.71%", pos=3, cex = 1.5, font =1)

abline(v = 0.8, col = "blue", lwd = 5)
text(0.7, 95010, "45.66%", pos=3, cex = 1.5, font =1)

dev.off() #关闭图像设备，同时储存图片
 




png("distribution of TE1_16Gy.png")
##hist(tab1$TE.1.16.Gy.AVG_Beta, main = "TE.1.16.Gy.AVG_Beta", xlab = "TE.1.16.Gy.AVG_Beta")
hist(tab1$TE.1.16.Gy.AVG_Beta, main = "", xlab = "", ylab = "")
abline(v = 0.2, col = "blue", lwd = 5)
text(0.3, 95010, "31.71%", pos=3, cex = 1.5, font =1)

abline(v = 0.8, col = "blue", lwd = 5)
text(0.7, 95010, "45.66%", pos=3, cex = 1.5, font =1)

dev.off()


length(tab1$TE.1.16.Gy.AVG_Beta[tab1$TE.1.16.Gy.AVG_Beta > 0.8]) / length(tab1$TE.1.16.Gy.AVG_Beta)
0.4566128


length(tab1$TE.1.16.Gy.AVG_Beta[tab1$TE.1.16.Gy.AVG_Beta < 0.2]) / length(tab1$TE.1.16.Gy.AVG_Beta)
0.3171291








require(Cairo)
CairoPDF("distribution of TE1.pdf", 9, 9) #单位为英寸
hist(tab1$TE.1.AVG_Beta, main = "", xlab = "", ylab = "")
abline(v = 0.2, col = "blue", lwd = 5)
text(0.3, 120000, "32.45%", pos=3, cex = 1.5, font =1)

abline(v = 0.8, col = "blue", lwd = 5)
text(0.7, 120000, "49.32%", pos=3, cex = 1.5, font =1)

dev.off() #关闭图像设备，同时储存图片




png("distribution of TE1.png")
hist(tab1$TE.1.AVG_Beta, main = "TE.1.AVG_Beta", xlab = "TE.1.AVG_Beta")
abline(v = 0.2, col = "purple")
text(0.3, 80000, "32.45%", pos=3, cex = 1.5, font =1)

abline(v = 0.8, col = "purple")
text(0.7, 80000, "49.32%", pos=3, cex = 1.5, font =1)
dev.off()

length(tab1$TE.1.AVG_Beta[tab1$TE.1.AVG_Beta > 0.8]) / length(tab1$TE.1.AVG_Beta)
0.4932339

length(tab1$TE.1.AVG_Beta[tab1$TE.1.AVG_Beta < 0.2]) / length(tab1$TE.1.AVG_Beta)
0.3244801








